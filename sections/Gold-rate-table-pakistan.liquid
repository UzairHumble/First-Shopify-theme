{% schema %}
{
  "name": "Gold rate table pak",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "Heading"
    },
    {
      "type": "textarea",
      "id": "description",
      "label": "Description"
    }
  ],
  "presets": [
    {
      "name": "Gold rate table pak",
      "category": "Custom"
    }
  ]
}
{% endschema %}


<!-- custom-section.liquid -->
<section class="custom-section">
  <div class="container">
    {% if section.settings.heading != blank %}
      <h2>{{ section.settings.heading }}</h2>
    {% endif %}

    <p>{{ section.settings.description }}</p>
    
    <div class="custom-content">
      <!-- Add any custom HTML or dynamic content here -->
 
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Live Gold Rates</title>
  <style>
    table {
      border-collapse: collapse;
      width: 100%;
    }
    
    th, td {
      text-align: left;
      padding: 8px;
      border: 1px solid #ddd;
    }
    
    th {
      background-color: #f2f2f2;
    }
    
    h2 {
      margin-top: 20px;
    }
  </style>
</head>
<body>

  <h2>Gold Rate in Pakistan Today</h2>

  <!-- Gold Rate Table -->
  <table id="gold-rate-table">
    <thead>
      <tr>
        <th>GOLD PURITY</th>
        <th>TOLA</th>
        <th>10 GRAM</th>
        <th>1 GRAM</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>24K</td>
        <td id="tola-24k">-</td>
        <td id="gram10-24k">-</td>
        <td id="gram1-24k">-</td> 
      </tr>
      <tr>
        <td>22K</td>
        <td id="tola-22k">-</td>
        <td id="gram10-22k">-</td>
        <td id="gram1-22k">-</td> 
      </tr>
      <tr>
        <td>21K</td>
        <td id="tola-21k">-</td>
        <td id="gram10-21k">-</td>
        <td id="gram1-21k">-</td> 
      </tr>
      <tr>
        <td>20K</td>
        <td id="tola-20k">-</td>
        <td id="gram10-20k">-</td>
        <td id="gram1-20k">-</td> 
      </tr>
      <tr>
        <td>18K</td>
        <td id="tola-18k">-</td>
        <td id="gram10-18k">-</td>
        <td id="gram1-18k">-</td> 
      </tr>
    </tbody>
  </table>

  <h2>INTERNATIONAL GOLD RATES</h2>

  <!-- International Gold Price Table -->
  <table>
    <tr>
      <td>Gold 24K Ounce</td>
      <td id="ounce-24k">-</td>
    </tr>
  </table>

  <script>
    async function fetchGoldRates() {
   try {
       const response = await fetch('https://api.api-ninjas.com/v1/goldprice', {
           headers: { 'X-Api-Key': 'aBcEspe4Aa7BEAx5vJz1UM6Y0616XREGUNPND5s2
' }
       });

       if (!response.ok) {
           throw new Error(`HTTP error! status: ${response.status}`);
       }

       const data = await response.json();
       console.log("API Response:", data);

       if (!data || !data[0] || !data[0].price) {
           console.error("Unexpected API response format:", data);
           return;
       }

       const ouncePriceUSD = data[0].price;
       const exchangeRatePKRtoUSD = 286; // Adjust if needed
       const ouncePricePKR = ouncePriceUSD * exchangeRatePKRtoUSD;
       const gramPricePKR = ouncePricePKR / 31.1035;

       const purityRates = {
           '24K': 1,
           '22K': 22 / 24,
           '21K': 21 / 24,
           '20K': 20 / 24,
           '18K': 18 / 24
       };

       for (const [purity, factor] of Object.entries(purityRates)) {
           document.getElementById(`tola-${purity.toLowerCase()}`).textContent = `Rs. ${(gramPricePKR * factor * 11.6638).toFixed(2)}`;
           document.getElementById(`gram10-${purity.toLowerCase()}`).textContent = `Rs. ${(gramPricePKR * factor * 10).toFixed(2)}`;
           document.getElementById(`gram1-${purity.toLowerCase()}`).textContent = `Rs. ${(gramPricePKR * factor).toFixed(2)}`;
       }

       document.getElementById('ounce-24k').textContent = `$ ${ouncePriceUSD.toFixed(2)}`;
   } catch (error) {
       console.error("Error fetching gold rates:", error);
   }
}

fetchGoldRates();
const express = require('express');
const fetch = require('node-fetch');

const app = express();
const PORT = 3000;

app.get('/goldprice', async (req, res) => {
    try {
        const response = await fetch('https://api.api-ninjas.com/v1/goldprice', {
            headers: { 'X-Api-Key': '7yGwAg8Na/ItdtZCE7saNg==oLDfxoLJl1wIjwBG' }
        });
        const data = await response.json();
        res.json(data);
    } catch (error) {
        res.status(500).send('Error fetching data');
    }
});

app.listen(PORT, () => console.log(`Proxy server running on port ${PORT}`));

  </script>

</body>
</html>


      
    </div>
  </div>
</section>

<style>
  .custom-section {
    padding: 50px 0;
    background-color: #f9f9f9;
  }
  .custom-section h2 {
    text-align: center;
    margin-bottom: 20px;
  }
</style>



